server:
  port: 8082

spring:
  application:
    name: api-gateway
  security:
    oauth2:
      client:
        provider:
          keycloak:
            token-uri: ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/token
            authorization-uri: ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/auth
            user-name-attribute: preferred_username
            user-info-uri: ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/certs
            user-info-authentication-method: header
        registration:
          banking-core-client:
            provider: keycloak
            client-id: banking-core-client
            client-secret: aI20V5ROw2N76S4RIA1TqJ3An5NoUPJK
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/keycloak
            scope: openid
      resourceserver:
        jwt:
          jwk-set-uri: ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/certs
#  cloud:
#    gateway:
#      routes:
#
#        - id: user-service
#          uri: lb://user-service
#          predicates:
#            - Path=/user/**
#          filters:
#            - StripPrefix=1
#
#        - id: fund-transfer-service
#          uri: lb://fund-transfer-service
#          predicates:
#            - Path=/fund-transfer/**
#          filters:
#            - StripPrefix=1

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8081/eureka

app:
  config:
    keycloak:
      url: http://localhost:8080/auth
      realm: banking-core